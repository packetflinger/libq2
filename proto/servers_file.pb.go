// compile with:
// protoc --go_out=. --go_opt=paths=source_relative *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: servers_file.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password []*ServerFile_Password `protobuf:"bytes,1,rep,name=password,proto3" json:"password,omitempty"`
	Server   []*ServerFile_Server   `protobuf:"bytes,2,rep,name=server,proto3" json:"server,omitempty"`
}

func (x *ServerFile) Reset() {
	*x = ServerFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servers_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFile) ProtoMessage() {}

func (x *ServerFile) ProtoReflect() protoreflect.Message {
	mi := &file_servers_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFile.ProtoReflect.Descriptor instead.
func (*ServerFile) Descriptor() ([]byte, []int) {
	return file_servers_file_proto_rawDescGZIP(), []int{0}
}

func (x *ServerFile) GetPassword() []*ServerFile_Password {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *ServerFile) GetServer() []*ServerFile_Server {
	if x != nil {
		return x.Server
	}
	return nil
}

// Each message being a unique rcon password
type ServerFile_Password struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Secret     string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ServerFile_Password) Reset() {
	*x = ServerFile_Password{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servers_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFile_Password) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFile_Password) ProtoMessage() {}

func (x *ServerFile_Password) ProtoReflect() protoreflect.Message {
	mi := &file_servers_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFile_Password.ProtoReflect.Descriptor instead.
func (*ServerFile_Password) Descriptor() ([]byte, []int) {
	return file_servers_file_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ServerFile_Password) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ServerFile_Password) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type ServerFile_Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// an alias for a server
	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// the ip:port or DNS address of the server
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// the password identifier, not the password itself
	RconPassword string `protobuf:"bytes,3,opt,name=rcon_password,json=rconPassword,proto3" json:"rcon_password,omitempty"`
	// arbitrary identifiers for making collections
	// of servers
	Groups []string `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	// reference to a ~/.ssh/config host entry
	SshHost string `protobuf:"bytes,5,opt,name=ssh_host,json=sshHost,proto3" json:"ssh_host,omitempty"`
	// the local path to the q2 log file
	LogFile string `protobuf:"bytes,6,opt,name=log_file,json=logFile,proto3" json:"log_file,omitempty"`
}

func (x *ServerFile_Server) Reset() {
	*x = ServerFile_Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servers_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFile_Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFile_Server) ProtoMessage() {}

func (x *ServerFile_Server) ProtoReflect() protoreflect.Message {
	mi := &file_servers_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFile_Server.ProtoReflect.Descriptor instead.
func (*ServerFile_Server) Descriptor() ([]byte, []int) {
	return file_servers_file_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ServerFile_Server) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ServerFile_Server) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ServerFile_Server) GetRconPassword() string {
	if x != nil {
		return x.RconPassword
	}
	return ""
}

func (x *ServerFile_Server) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ServerFile_Server) GetSshHost() string {
	if x != nil {
		return x.SshHost
	}
	return ""
}

func (x *ServerFile_Server) GetLogFile() string {
	if x != nil {
		return x.LogFile
	}
	return ""
}

var File_servers_file_proto protoreflect.FileDescriptor

var file_servers_file_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x02, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x1a, 0x42, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0xb5, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x63, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x73,
	0x68, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x73,
	0x68, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x62,
	0x71, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_servers_file_proto_rawDescOnce sync.Once
	file_servers_file_proto_rawDescData = file_servers_file_proto_rawDesc
)

func file_servers_file_proto_rawDescGZIP() []byte {
	file_servers_file_proto_rawDescOnce.Do(func() {
		file_servers_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_servers_file_proto_rawDescData)
	})
	return file_servers_file_proto_rawDescData
}

var file_servers_file_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_servers_file_proto_goTypes = []interface{}{
	(*ServerFile)(nil),          // 0: proto.ServerFile
	(*ServerFile_Password)(nil), // 1: proto.ServerFile.Password
	(*ServerFile_Server)(nil),   // 2: proto.ServerFile.Server
}
var file_servers_file_proto_depIdxs = []int32{
	1, // 0: proto.ServerFile.password:type_name -> proto.ServerFile.Password
	2, // 1: proto.ServerFile.server:type_name -> proto.ServerFile.Server
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_servers_file_proto_init() }
func file_servers_file_proto_init() {
	if File_servers_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_servers_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servers_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFile_Password); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servers_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFile_Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_servers_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_servers_file_proto_goTypes,
		DependencyIndexes: file_servers_file_proto_depIdxs,
		MessageInfos:      file_servers_file_proto_msgTypes,
	}.Build()
	File_servers_file_proto = out.File
	file_servers_file_proto_rawDesc = nil
	file_servers_file_proto_goTypes = nil
	file_servers_file_proto_depIdxs = nil
}
