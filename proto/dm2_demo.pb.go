// compile with:
// protoc --go_out=. --go_opt=paths=source_relative dm2_demo.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: dm2_demo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DM2Demo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serverinfo    *ServerInfo             `protobuf:"bytes,1,opt,name=serverinfo,proto3" json:"serverinfo,omitempty"`
	Baselines     map[int32]*PackedEntity `protobuf:"bytes,2,rep,name=baselines,proto3" json:"baselines,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Configstrings map[int32]*CString      `protobuf:"bytes,3,rep,name=configstrings,proto3" json:"configstrings,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Frames        map[int32]*Frame        `protobuf:"bytes,5,rep,name=frames,proto3" json:"frames,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CurrentFrame  int32                   `protobuf:"varint,6,opt,name=current_frame,json=currentFrame,proto3" json:"current_frame,omitempty"` // index to the frames map
}

func (x *DM2Demo) Reset() {
	*x = DM2Demo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DM2Demo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DM2Demo) ProtoMessage() {}

func (x *DM2Demo) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DM2Demo.ProtoReflect.Descriptor instead.
func (*DM2Demo) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{0}
}

func (x *DM2Demo) GetServerinfo() *ServerInfo {
	if x != nil {
		return x.Serverinfo
	}
	return nil
}

func (x *DM2Demo) GetBaselines() map[int32]*PackedEntity {
	if x != nil {
		return x.Baselines
	}
	return nil
}

func (x *DM2Demo) GetConfigstrings() map[int32]*CString {
	if x != nil {
		return x.Configstrings
	}
	return nil
}

func (x *DM2Demo) GetFrames() map[int32]*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

func (x *DM2Demo) GetCurrentFrame() int32 {
	if x != nil {
		return x.CurrentFrame
	}
	return 0
}

type ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol     uint32 `protobuf:"varint,1,opt,name=protocol,proto3" json:"protocol,omitempty"`                          // 32 bits
	ServerCount  uint32 `protobuf:"varint,2,opt,name=server_count,json=serverCount,proto3" json:"server_count,omitempty"` // 32 bits
	Demo         bool   `protobuf:"varint,3,opt,name=demo,proto3" json:"demo,omitempty"`                                  // 8 bits
	GameDir      string `protobuf:"bytes,4,opt,name=game_dir,json=gameDir,proto3" json:"game_dir,omitempty"`
	ClientNumber uint32 `protobuf:"varint,5,opt,name=client_number,json=clientNumber,proto3" json:"client_number,omitempty"` // 16 bits
	MapName      string `protobuf:"bytes,6,opt,name=map_name,json=mapName,proto3" json:"map_name,omitempty"`
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{1}
}

func (x *ServerInfo) GetProtocol() uint32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *ServerInfo) GetServerCount() uint32 {
	if x != nil {
		return x.ServerCount
	}
	return 0
}

func (x *ServerInfo) GetDemo() bool {
	if x != nil {
		return x.Demo
	}
	return false
}

func (x *ServerInfo) GetGameDir() string {
	if x != nil {
		return x.GameDir
	}
	return ""
}

func (x *ServerInfo) GetClientNumber() uint32 {
	if x != nil {
		return x.ClientNumber
	}
	return 0
}

func (x *ServerInfo) GetMapName() string {
	if x != nil {
		return x.MapName
	}
	return ""
}

type CString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"` // 16 bits
	String_ string `protobuf:"bytes,2,opt,name=string,proto3" json:"string,omitempty"`
}

func (x *CString) Reset() {
	*x = CString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CString) ProtoMessage() {}

func (x *CString) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CString.ProtoReflect.Descriptor instead.
func (*CString) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{2}
}

func (x *CString) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CString) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

type StuffText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	String_ string `protobuf:"bytes,1,opt,name=string,proto3" json:"string,omitempty"`
}

func (x *StuffText) Reset() {
	*x = StuffText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StuffText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StuffText) ProtoMessage() {}

func (x *StuffText) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StuffText.ProtoReflect.Descriptor instead.
func (*StuffText) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{3}
}

func (x *StuffText) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

// an edict_t packed up and ready for xfer
type PackedEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number      uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`                  // 32 bits
	OriginX     int32  `protobuf:"varint,2,opt,name=origin_x,json=originX,proto3" json:"origin_x,omitempty"` // 16 bits
	OriginY     int32  `protobuf:"varint,3,opt,name=origin_y,json=originY,proto3" json:"origin_y,omitempty"` // 16 bits
	OriginZ     int32  `protobuf:"varint,4,opt,name=origin_z,json=originZ,proto3" json:"origin_z,omitempty"` // 16 bits
	AngleX      int32  `protobuf:"varint,5,opt,name=angle_x,json=angleX,proto3" json:"angle_x,omitempty"`
	AngleY      int32  `protobuf:"varint,6,opt,name=angle_y,json=angleY,proto3" json:"angle_y,omitempty"`
	AngleZ      int32  `protobuf:"varint,7,opt,name=angle_z,json=angleZ,proto3" json:"angle_z,omitempty"`
	OldOriginX  int32  `protobuf:"varint,8,opt,name=old_origin_x,json=oldOriginX,proto3" json:"old_origin_x,omitempty"`
	OldOriginY  int32  `protobuf:"varint,9,opt,name=old_origin_y,json=oldOriginY,proto3" json:"old_origin_y,omitempty"`
	OldOriginZ  int32  `protobuf:"varint,10,opt,name=old_origin_z,json=oldOriginZ,proto3" json:"old_origin_z,omitempty"`
	ModelIndex  uint32 `protobuf:"varint,11,opt,name=model_index,json=modelIndex,proto3" json:"model_index,omitempty"` // 8 bits
	ModelIndex2 uint32 `protobuf:"varint,12,opt,name=model_index2,json=modelIndex2,proto3" json:"model_index2,omitempty"`
	ModelIndex3 uint32 `protobuf:"varint,13,opt,name=model_index3,json=modelIndex3,proto3" json:"model_index3,omitempty"`
	ModelIndex4 uint32 `protobuf:"varint,14,opt,name=model_index4,json=modelIndex4,proto3" json:"model_index4,omitempty"`
	Skin        uint32 `protobuf:"varint,15,opt,name=skin,proto3" json:"skin,omitempty"`
	Effects     uint32 `protobuf:"varint,16,opt,name=effects,proto3" json:"effects,omitempty"`
	RenderFx    uint32 `protobuf:"varint,17,opt,name=render_fx,json=renderFx,proto3" json:"render_fx,omitempty"`
	Solid       uint32 `protobuf:"varint,18,opt,name=solid,proto3" json:"solid,omitempty"`
	Frame       uint32 `protobuf:"varint,19,opt,name=frame,proto3" json:"frame,omitempty"`   // 16 bits
	Sound       uint32 `protobuf:"varint,20,opt,name=sound,proto3" json:"sound,omitempty"`   // 8 bits
	Event       uint32 `protobuf:"varint,21,opt,name=event,proto3" json:"event,omitempty"`   // 8 bits
	Remove      bool   `protobuf:"varint,22,opt,name=remove,proto3" json:"remove,omitempty"` // this ent should be removed after frame
}

func (x *PackedEntity) Reset() {
	*x = PackedEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackedEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackedEntity) ProtoMessage() {}

func (x *PackedEntity) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackedEntity.ProtoReflect.Descriptor instead.
func (*PackedEntity) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{4}
}

func (x *PackedEntity) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PackedEntity) GetOriginX() int32 {
	if x != nil {
		return x.OriginX
	}
	return 0
}

func (x *PackedEntity) GetOriginY() int32 {
	if x != nil {
		return x.OriginY
	}
	return 0
}

func (x *PackedEntity) GetOriginZ() int32 {
	if x != nil {
		return x.OriginZ
	}
	return 0
}

func (x *PackedEntity) GetAngleX() int32 {
	if x != nil {
		return x.AngleX
	}
	return 0
}

func (x *PackedEntity) GetAngleY() int32 {
	if x != nil {
		return x.AngleY
	}
	return 0
}

func (x *PackedEntity) GetAngleZ() int32 {
	if x != nil {
		return x.AngleZ
	}
	return 0
}

func (x *PackedEntity) GetOldOriginX() int32 {
	if x != nil {
		return x.OldOriginX
	}
	return 0
}

func (x *PackedEntity) GetOldOriginY() int32 {
	if x != nil {
		return x.OldOriginY
	}
	return 0
}

func (x *PackedEntity) GetOldOriginZ() int32 {
	if x != nil {
		return x.OldOriginZ
	}
	return 0
}

func (x *PackedEntity) GetModelIndex() uint32 {
	if x != nil {
		return x.ModelIndex
	}
	return 0
}

func (x *PackedEntity) GetModelIndex2() uint32 {
	if x != nil {
		return x.ModelIndex2
	}
	return 0
}

func (x *PackedEntity) GetModelIndex3() uint32 {
	if x != nil {
		return x.ModelIndex3
	}
	return 0
}

func (x *PackedEntity) GetModelIndex4() uint32 {
	if x != nil {
		return x.ModelIndex4
	}
	return 0
}

func (x *PackedEntity) GetSkin() uint32 {
	if x != nil {
		return x.Skin
	}
	return 0
}

func (x *PackedEntity) GetEffects() uint32 {
	if x != nil {
		return x.Effects
	}
	return 0
}

func (x *PackedEntity) GetRenderFx() uint32 {
	if x != nil {
		return x.RenderFx
	}
	return 0
}

func (x *PackedEntity) GetSolid() uint32 {
	if x != nil {
		return x.Solid
	}
	return 0
}

func (x *PackedEntity) GetFrame() uint32 {
	if x != nil {
		return x.Frame
	}
	return 0
}

func (x *PackedEntity) GetSound() uint32 {
	if x != nil {
		return x.Sound
	}
	return 0
}

func (x *PackedEntity) GetEvent() uint32 {
	if x != nil {
		return x.Event
	}
	return 0
}

func (x *PackedEntity) GetRemove() bool {
	if x != nil {
		return x.Remove
	}
	return false
}

type PlayerMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                      // 8 bits
	OriginX     int32  `protobuf:"varint,2,opt,name=origin_x,json=originX,proto3" json:"origin_x,omitempty"` // 16 bits
	OriginY     int32  `protobuf:"varint,3,opt,name=origin_y,json=originY,proto3" json:"origin_y,omitempty"`
	OriginZ     int32  `protobuf:"varint,4,opt,name=origin_z,json=originZ,proto3" json:"origin_z,omitempty"`
	VelocityX   uint32 `protobuf:"varint,5,opt,name=velocity_x,json=velocityX,proto3" json:"velocity_x,omitempty"`
	VelocityY   uint32 `protobuf:"varint,6,opt,name=velocity_y,json=velocityY,proto3" json:"velocity_y,omitempty"`
	VelocityZ   uint32 `protobuf:"varint,7,opt,name=velocity_z,json=velocityZ,proto3" json:"velocity_z,omitempty"`
	Flags       uint32 `protobuf:"varint,8,opt,name=flags,proto3" json:"flags,omitempty"`                                   // byte
	Time        uint32 `protobuf:"varint,9,opt,name=time,proto3" json:"time,omitempty"`                                     // byte
	Gravity     int32  `protobuf:"varint,10,opt,name=gravity,proto3" json:"gravity,omitempty"`                              // 16 bits
	DeltaAngleX int32  `protobuf:"varint,11,opt,name=delta_angle_x,json=deltaAngleX,proto3" json:"delta_angle_x,omitempty"` // 16 bits
	DeltaAngleY int32  `protobuf:"varint,12,opt,name=delta_angle_y,json=deltaAngleY,proto3" json:"delta_angle_y,omitempty"`
	DeltaAngleZ int32  `protobuf:"varint,13,opt,name=delta_angle_z,json=deltaAngleZ,proto3" json:"delta_angle_z,omitempty"`
}

func (x *PlayerMove) Reset() {
	*x = PlayerMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMove) ProtoMessage() {}

func (x *PlayerMove) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMove.ProtoReflect.Descriptor instead.
func (*PlayerMove) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerMove) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PlayerMove) GetOriginX() int32 {
	if x != nil {
		return x.OriginX
	}
	return 0
}

func (x *PlayerMove) GetOriginY() int32 {
	if x != nil {
		return x.OriginY
	}
	return 0
}

func (x *PlayerMove) GetOriginZ() int32 {
	if x != nil {
		return x.OriginZ
	}
	return 0
}

func (x *PlayerMove) GetVelocityX() uint32 {
	if x != nil {
		return x.VelocityX
	}
	return 0
}

func (x *PlayerMove) GetVelocityY() uint32 {
	if x != nil {
		return x.VelocityY
	}
	return 0
}

func (x *PlayerMove) GetVelocityZ() uint32 {
	if x != nil {
		return x.VelocityZ
	}
	return 0
}

func (x *PlayerMove) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *PlayerMove) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PlayerMove) GetGravity() int32 {
	if x != nil {
		return x.Gravity
	}
	return 0
}

func (x *PlayerMove) GetDeltaAngleX() int32 {
	if x != nil {
		return x.DeltaAngleX
	}
	return 0
}

func (x *PlayerMove) GetDeltaAngleY() int32 {
	if x != nil {
		return x.DeltaAngleY
	}
	return 0
}

func (x *PlayerMove) GetDeltaAngleZ() int32 {
	if x != nil {
		return x.DeltaAngleZ
	}
	return 0
}

type PlayerStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PlayerStat) Reset() {
	*x = PlayerStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStat) ProtoMessage() {}

func (x *PlayerStat) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStat.ProtoReflect.Descriptor instead.
func (*PlayerStat) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerStat) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PlayerStat) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PackedPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movestate   *PlayerMove   `protobuf:"bytes,1,opt,name=movestate,proto3" json:"movestate,omitempty"`
	ViewAnglesX int32         `protobuf:"varint,2,opt,name=view_angles_x,json=viewAnglesX,proto3" json:"view_angles_x,omitempty"` // 16 bits
	ViewAnglesY int32         `protobuf:"varint,3,opt,name=view_angles_y,json=viewAnglesY,proto3" json:"view_angles_y,omitempty"` // 16 bits
	ViewAnglesZ int32         `protobuf:"varint,4,opt,name=view_angles_z,json=viewAnglesZ,proto3" json:"view_angles_z,omitempty"` // 16 bits
	ViewOffsetX int32         `protobuf:"varint,5,opt,name=view_offset_x,json=viewOffsetX,proto3" json:"view_offset_x,omitempty"` // 8 bits
	ViewOffsetY int32         `protobuf:"varint,6,opt,name=view_offset_y,json=viewOffsetY,proto3" json:"view_offset_y,omitempty"`
	ViewOffsetZ int32         `protobuf:"varint,7,opt,name=view_offset_z,json=viewOffsetZ,proto3" json:"view_offset_z,omitempty"`
	KickAnglesX int32         `protobuf:"varint,8,opt,name=kick_angles_x,json=kickAnglesX,proto3" json:"kick_angles_x,omitempty"`
	KickAnglesY int32         `protobuf:"varint,9,opt,name=kick_angles_y,json=kickAnglesY,proto3" json:"kick_angles_y,omitempty"`
	KickAnglesZ int32         `protobuf:"varint,10,opt,name=kick_angles_z,json=kickAnglesZ,proto3" json:"kick_angles_z,omitempty"`
	GunAnglesX  int32         `protobuf:"varint,11,opt,name=gun_angles_x,json=gunAnglesX,proto3" json:"gun_angles_x,omitempty"`
	GunAnglesY  int32         `protobuf:"varint,12,opt,name=gun_angles_y,json=gunAnglesY,proto3" json:"gun_angles_y,omitempty"`
	GunAnglesZ  int32         `protobuf:"varint,13,opt,name=gun_angles_z,json=gunAnglesZ,proto3" json:"gun_angles_z,omitempty"`
	GunOffsetX  int32         `protobuf:"varint,14,opt,name=gun_offset_x,json=gunOffsetX,proto3" json:"gun_offset_x,omitempty"`
	GunOffsetY  int32         `protobuf:"varint,15,opt,name=gun_offset_y,json=gunOffsetY,proto3" json:"gun_offset_y,omitempty"`
	GunOffsetZ  int32         `protobuf:"varint,16,opt,name=gun_offset_z,json=gunOffsetZ,proto3" json:"gun_offset_z,omitempty"`
	GunIndex    uint32        `protobuf:"varint,17,opt,name=gun_index,json=gunIndex,proto3" json:"gun_index,omitempty"` // 8 bits
	GunFrame    uint32        `protobuf:"varint,18,opt,name=gun_frame,json=gunFrame,proto3" json:"gun_frame,omitempty"` // 8 bits
	BlendW      uint32        `protobuf:"varint,19,opt,name=blend_w,json=blendW,proto3" json:"blend_w,omitempty"`
	BlendX      uint32        `protobuf:"varint,20,opt,name=blend_x,json=blendX,proto3" json:"blend_x,omitempty"`
	BlendY      uint32        `protobuf:"varint,21,opt,name=blend_y,json=blendY,proto3" json:"blend_y,omitempty"`
	BlendZ      uint32        `protobuf:"varint,22,opt,name=blend_z,json=blendZ,proto3" json:"blend_z,omitempty"`
	Fov         uint32        `protobuf:"varint,23,opt,name=fov,proto3" json:"fov,omitempty"`
	RdFlags     uint32        `protobuf:"varint,24,opt,name=rd_flags,json=rdFlags,proto3" json:"rd_flags,omitempty"`
	Stats       []*PlayerStat `protobuf:"bytes,25,rep,name=stats,proto3" json:"stats,omitempty"` // 16 bits
}

func (x *PackedPlayer) Reset() {
	*x = PackedPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackedPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackedPlayer) ProtoMessage() {}

func (x *PackedPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackedPlayer.ProtoReflect.Descriptor instead.
func (*PackedPlayer) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{7}
}

func (x *PackedPlayer) GetMovestate() *PlayerMove {
	if x != nil {
		return x.Movestate
	}
	return nil
}

func (x *PackedPlayer) GetViewAnglesX() int32 {
	if x != nil {
		return x.ViewAnglesX
	}
	return 0
}

func (x *PackedPlayer) GetViewAnglesY() int32 {
	if x != nil {
		return x.ViewAnglesY
	}
	return 0
}

func (x *PackedPlayer) GetViewAnglesZ() int32 {
	if x != nil {
		return x.ViewAnglesZ
	}
	return 0
}

func (x *PackedPlayer) GetViewOffsetX() int32 {
	if x != nil {
		return x.ViewOffsetX
	}
	return 0
}

func (x *PackedPlayer) GetViewOffsetY() int32 {
	if x != nil {
		return x.ViewOffsetY
	}
	return 0
}

func (x *PackedPlayer) GetViewOffsetZ() int32 {
	if x != nil {
		return x.ViewOffsetZ
	}
	return 0
}

func (x *PackedPlayer) GetKickAnglesX() int32 {
	if x != nil {
		return x.KickAnglesX
	}
	return 0
}

func (x *PackedPlayer) GetKickAnglesY() int32 {
	if x != nil {
		return x.KickAnglesY
	}
	return 0
}

func (x *PackedPlayer) GetKickAnglesZ() int32 {
	if x != nil {
		return x.KickAnglesZ
	}
	return 0
}

func (x *PackedPlayer) GetGunAnglesX() int32 {
	if x != nil {
		return x.GunAnglesX
	}
	return 0
}

func (x *PackedPlayer) GetGunAnglesY() int32 {
	if x != nil {
		return x.GunAnglesY
	}
	return 0
}

func (x *PackedPlayer) GetGunAnglesZ() int32 {
	if x != nil {
		return x.GunAnglesZ
	}
	return 0
}

func (x *PackedPlayer) GetGunOffsetX() int32 {
	if x != nil {
		return x.GunOffsetX
	}
	return 0
}

func (x *PackedPlayer) GetGunOffsetY() int32 {
	if x != nil {
		return x.GunOffsetY
	}
	return 0
}

func (x *PackedPlayer) GetGunOffsetZ() int32 {
	if x != nil {
		return x.GunOffsetZ
	}
	return 0
}

func (x *PackedPlayer) GetGunIndex() uint32 {
	if x != nil {
		return x.GunIndex
	}
	return 0
}

func (x *PackedPlayer) GetGunFrame() uint32 {
	if x != nil {
		return x.GunFrame
	}
	return 0
}

func (x *PackedPlayer) GetBlendW() uint32 {
	if x != nil {
		return x.BlendW
	}
	return 0
}

func (x *PackedPlayer) GetBlendX() uint32 {
	if x != nil {
		return x.BlendX
	}
	return 0
}

func (x *PackedPlayer) GetBlendY() uint32 {
	if x != nil {
		return x.BlendY
	}
	return 0
}

func (x *PackedPlayer) GetBlendZ() uint32 {
	if x != nil {
		return x.BlendZ
	}
	return 0
}

func (x *PackedPlayer) GetFov() uint32 {
	if x != nil {
		return x.Fov
	}
	return 0
}

func (x *PackedPlayer) GetRdFlags() uint32 {
	if x != nil {
		return x.RdFlags
	}
	return 0
}

func (x *PackedPlayer) GetStats() []*PlayerStat {
	if x != nil {
		return x.Stats
	}
	return nil
}

type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number            int32                   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`                            // signed
	Delta             int32                   `protobuf:"varint,2,opt,name=delta,proto3" json:"delta,omitempty"`                              // signed
	Suppressed        uint32                  `protobuf:"varint,3,opt,name=suppressed,proto3" json:"suppressed,omitempty"`                    // 8 bits
	AreaBytes         uint32                  `protobuf:"varint,4,opt,name=area_bytes,json=areaBytes,proto3" json:"area_bytes,omitempty"`     // 8 bits
	AreaBits          []uint32                `protobuf:"varint,5,rep,packed,name=area_bits,json=areaBits,proto3" json:"area_bits,omitempty"` // byte
	PlayerState       *PackedPlayer           `protobuf:"bytes,6,opt,name=player_state,json=playerState,proto3" json:"player_state,omitempty"`
	Entities          map[int32]*PackedEntity `protobuf:"bytes,7,rep,name=entities,proto3" json:"entities,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Configstrings     map[int32]*CString      `protobuf:"bytes,8,rep,name=configstrings,proto3" json:"configstrings,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Centerprints      []*CenterPrint          `protobuf:"bytes,9,rep,name=centerprints,proto3" json:"centerprints,omitempty"`
	Stufftexts        []*StuffText            `protobuf:"bytes,10,rep,name=stufftexts,proto3" json:"stufftexts,omitempty"`
	Prints            []*Print                `protobuf:"bytes,11,rep,name=prints,proto3" json:"prints,omitempty"`
	Sounds            []*PackedSound          `protobuf:"bytes,12,rep,name=sounds,proto3" json:"sounds,omitempty"`
	TemporaryEntities []*TemporaryEntity      `protobuf:"bytes,13,rep,name=temporary_entities,json=temporaryEntities,proto3" json:"temporary_entities,omitempty"`
	Flashes1          []*MuzzleFlash          `protobuf:"bytes,14,rep,name=flashes1,proto3" json:"flashes1,omitempty"`
	Flashes2          []*MuzzleFlash          `protobuf:"bytes,15,rep,name=flashes2,proto3" json:"flashes2,omitempty"`
	Layouts           []*Layout               `protobuf:"bytes,16,rep,name=layouts,proto3" json:"layouts,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{8}
}

func (x *Frame) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Frame) GetDelta() int32 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *Frame) GetSuppressed() uint32 {
	if x != nil {
		return x.Suppressed
	}
	return 0
}

func (x *Frame) GetAreaBytes() uint32 {
	if x != nil {
		return x.AreaBytes
	}
	return 0
}

func (x *Frame) GetAreaBits() []uint32 {
	if x != nil {
		return x.AreaBits
	}
	return nil
}

func (x *Frame) GetPlayerState() *PackedPlayer {
	if x != nil {
		return x.PlayerState
	}
	return nil
}

func (x *Frame) GetEntities() map[int32]*PackedEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *Frame) GetConfigstrings() map[int32]*CString {
	if x != nil {
		return x.Configstrings
	}
	return nil
}

func (x *Frame) GetCenterprints() []*CenterPrint {
	if x != nil {
		return x.Centerprints
	}
	return nil
}

func (x *Frame) GetStufftexts() []*StuffText {
	if x != nil {
		return x.Stufftexts
	}
	return nil
}

func (x *Frame) GetPrints() []*Print {
	if x != nil {
		return x.Prints
	}
	return nil
}

func (x *Frame) GetSounds() []*PackedSound {
	if x != nil {
		return x.Sounds
	}
	return nil
}

func (x *Frame) GetTemporaryEntities() []*TemporaryEntity {
	if x != nil {
		return x.TemporaryEntities
	}
	return nil
}

func (x *Frame) GetFlashes1() []*MuzzleFlash {
	if x != nil {
		return x.Flashes1
	}
	return nil
}

func (x *Frame) GetFlashes2() []*MuzzleFlash {
	if x != nil {
		return x.Flashes2
	}
	return nil
}

func (x *Frame) GetLayouts() []*Layout {
	if x != nil {
		return x.Layouts
	}
	return nil
}

type Print struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level   uint32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"` // 8 bits
	String_ string `protobuf:"bytes,2,opt,name=string,proto3" json:"string,omitempty"`
}

func (x *Print) Reset() {
	*x = Print{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Print) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Print) ProtoMessage() {}

func (x *Print) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Print.ProtoReflect.Descriptor instead.
func (*Print) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{9}
}

func (x *Print) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Print) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

// Start a sound playing
type PackedSound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags       uint32 `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"` // 8 bits
	Index       uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"` // 8 bits, CS_SOUNDS + this
	Volume      uint32 `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Attenuation uint32 `protobuf:"varint,4,opt,name=attenuation,proto3" json:"attenuation,omitempty"`
	TimeOffset  uint32 `protobuf:"varint,5,opt,name=time_offset,json=timeOffset,proto3" json:"time_offset,omitempty"`
	Channel     uint32 `protobuf:"varint,6,opt,name=channel,proto3" json:"channel,omitempty"`                      // 16 bits
	Entity      uint32 `protobuf:"varint,7,opt,name=entity,proto3" json:"entity,omitempty"`                        // 16 bits, relative to this ent
	PositionX   uint32 `protobuf:"varint,8,opt,name=position_x,json=positionX,proto3" json:"position_x,omitempty"` // 16 bits
	PositionY   uint32 `protobuf:"varint,9,opt,name=position_y,json=positionY,proto3" json:"position_y,omitempty"`
	PositionZ   uint32 `protobuf:"varint,10,opt,name=position_z,json=positionZ,proto3" json:"position_z,omitempty"`
}

func (x *PackedSound) Reset() {
	*x = PackedSound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackedSound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackedSound) ProtoMessage() {}

func (x *PackedSound) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackedSound.ProtoReflect.Descriptor instead.
func (*PackedSound) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{10}
}

func (x *PackedSound) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *PackedSound) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PackedSound) GetVolume() uint32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *PackedSound) GetAttenuation() uint32 {
	if x != nil {
		return x.Attenuation
	}
	return 0
}

func (x *PackedSound) GetTimeOffset() uint32 {
	if x != nil {
		return x.TimeOffset
	}
	return 0
}

func (x *PackedSound) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *PackedSound) GetEntity() uint32 {
	if x != nil {
		return x.Entity
	}
	return 0
}

func (x *PackedSound) GetPositionX() uint32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *PackedSound) GetPositionY() uint32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

func (x *PackedSound) GetPositionZ() uint32 {
	if x != nil {
		return x.PositionZ
	}
	return 0
}

type TemporaryEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                               // 8 bits
	Position1X uint32 `protobuf:"varint,2,opt,name=position1_x,json=position1X,proto3" json:"position1_x,omitempty"` // 16 bits
	Position1Y uint32 `protobuf:"varint,3,opt,name=position1_y,json=position1Y,proto3" json:"position1_y,omitempty"` // 16 bits
	Position1Z uint32 `protobuf:"varint,4,opt,name=position1_z,json=position1Z,proto3" json:"position1_z,omitempty"` // 16 bits
	Position2X uint32 `protobuf:"varint,5,opt,name=position2_x,json=position2X,proto3" json:"position2_x,omitempty"` // 16 bits
	Position2Y uint32 `protobuf:"varint,6,opt,name=position2_y,json=position2Y,proto3" json:"position2_y,omitempty"` // 16 bits
	Position2Z uint32 `protobuf:"varint,7,opt,name=position2_z,json=position2Z,proto3" json:"position2_z,omitempty"` // 16 bits
	OffsetX    uint32 `protobuf:"varint,8,opt,name=offset_x,json=offsetX,proto3" json:"offset_x,omitempty"`          // 16 bits
	OffsetY    uint32 `protobuf:"varint,9,opt,name=offset_y,json=offsetY,proto3" json:"offset_y,omitempty"`          // 16 bits
	OffsetZ    uint32 `protobuf:"varint,10,opt,name=offset_z,json=offsetZ,proto3" json:"offset_z,omitempty"`         // 16 bits
	Direction  uint32 `protobuf:"varint,11,opt,name=direction,proto3" json:"direction,omitempty"`                    // 8 bits
	Count      uint32 `protobuf:"varint,12,opt,name=count,proto3" json:"count,omitempty"`                            // 8 bits
	Color      uint32 `protobuf:"varint,13,opt,name=color,proto3" json:"color,omitempty"`                            // 8 bits
	Entity1    uint32 `protobuf:"varint,14,opt,name=entity1,proto3" json:"entity1,omitempty"`                        // 16 bits
	Entity2    uint32 `protobuf:"varint,15,opt,name=entity2,proto3" json:"entity2,omitempty"`                        // 16 bits
	Time       uint32 `protobuf:"varint,16,opt,name=time,proto3" json:"time,omitempty"`                              // 32 bits
}

func (x *TemporaryEntity) Reset() {
	*x = TemporaryEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemporaryEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemporaryEntity) ProtoMessage() {}

func (x *TemporaryEntity) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemporaryEntity.ProtoReflect.Descriptor instead.
func (*TemporaryEntity) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{11}
}

func (x *TemporaryEntity) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TemporaryEntity) GetPosition1X() uint32 {
	if x != nil {
		return x.Position1X
	}
	return 0
}

func (x *TemporaryEntity) GetPosition1Y() uint32 {
	if x != nil {
		return x.Position1Y
	}
	return 0
}

func (x *TemporaryEntity) GetPosition1Z() uint32 {
	if x != nil {
		return x.Position1Z
	}
	return 0
}

func (x *TemporaryEntity) GetPosition2X() uint32 {
	if x != nil {
		return x.Position2X
	}
	return 0
}

func (x *TemporaryEntity) GetPosition2Y() uint32 {
	if x != nil {
		return x.Position2Y
	}
	return 0
}

func (x *TemporaryEntity) GetPosition2Z() uint32 {
	if x != nil {
		return x.Position2Z
	}
	return 0
}

func (x *TemporaryEntity) GetOffsetX() uint32 {
	if x != nil {
		return x.OffsetX
	}
	return 0
}

func (x *TemporaryEntity) GetOffsetY() uint32 {
	if x != nil {
		return x.OffsetY
	}
	return 0
}

func (x *TemporaryEntity) GetOffsetZ() uint32 {
	if x != nil {
		return x.OffsetZ
	}
	return 0
}

func (x *TemporaryEntity) GetDirection() uint32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *TemporaryEntity) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TemporaryEntity) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *TemporaryEntity) GetEntity1() uint32 {
	if x != nil {
		return x.Entity1
	}
	return 0
}

func (x *TemporaryEntity) GetEntity2() uint32 {
	if x != nil {
		return x.Entity2
	}
	return 0
}

func (x *TemporaryEntity) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type MuzzleFlash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity uint32 `protobuf:"varint,1,opt,name=entity,proto3" json:"entity,omitempty"` // 16 bits
	Weapon uint32 `protobuf:"varint,2,opt,name=weapon,proto3" json:"weapon,omitempty"` // 8 bits
}

func (x *MuzzleFlash) Reset() {
	*x = MuzzleFlash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuzzleFlash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuzzleFlash) ProtoMessage() {}

func (x *MuzzleFlash) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuzzleFlash.ProtoReflect.Descriptor instead.
func (*MuzzleFlash) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{12}
}

func (x *MuzzleFlash) GetEntity() uint32 {
	if x != nil {
		return x.Entity
	}
	return 0
}

func (x *MuzzleFlash) GetWeapon() uint32 {
	if x != nil {
		return x.Weapon
	}
	return 0
}

type Layout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	String_ string `protobuf:"bytes,1,opt,name=string,proto3" json:"string,omitempty"`
}

func (x *Layout) Reset() {
	*x = Layout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Layout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Layout) ProtoMessage() {}

func (x *Layout) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Layout.ProtoReflect.Descriptor instead.
func (*Layout) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{13}
}

func (x *Layout) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

type CenterPrint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	String_ string `protobuf:"bytes,1,opt,name=string,proto3" json:"string,omitempty"`
}

func (x *CenterPrint) Reset() {
	*x = CenterPrint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dm2_demo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CenterPrint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CenterPrint) ProtoMessage() {}

func (x *CenterPrint) ProtoReflect() protoreflect.Message {
	mi := &file_dm2_demo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CenterPrint.ProtoReflect.Descriptor instead.
func (*CenterPrint) Descriptor() ([]byte, []int) {
	return file_dm2_demo_proto_rawDescGZIP(), []int{14}
}

func (x *CenterPrint) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

var File_dm2_demo_proto protoreflect.FileDescriptor

var file_dm2_demo_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x6d, 0x32, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x04, 0x0a, 0x07, 0x44, 0x4d, 0x32, 0x44,
	0x65, 0x6d, 0x6f, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x4d, 0x32, 0x44, 0x65, 0x6d, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x4d, 0x32, 0x44, 0x65, 0x6d, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x32, 0x0a, 0x06,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x4d, 0x32, 0x44, 0x65, 0x6d, 0x6f, 0x2e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x51, 0x0a, 0x0e, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x47, 0x0a, 0x0b, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xba, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x65, 0x6d, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x69, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x37, 0x0a, 0x07, 0x43, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x23, 0x0a, 0x09, 0x53, 0x74, 0x75,
	0x66, 0x66, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xed,
	0x04, 0x0a, 0x0c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x58, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x59, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5a, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x58, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x59, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x5f, 0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x5a, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5f, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x58, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x6c, 0x64,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x59, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f,
	0x6c, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5a, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x33, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x33,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x34,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x78, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x6f, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0xfe,
	0x02, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x58, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x59, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5f, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5a, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79,
	0x58, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x59,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5a, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x61,
	0x76, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x58, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x59, 0x12, 0x22, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x7a, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x5a, 0x22,
	0x38, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc3, 0x06, 0x0a, 0x0c, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x09, 0x6d, 0x6f,
	0x76, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65,
	0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x5f, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x58, 0x12,
	0x22, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x5f, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x67, 0x6c,
	0x65, 0x73, 0x59, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x73, 0x5f, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77,
	0x41, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x5a, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x76, 0x69, 0x65, 0x77, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58, 0x12, 0x22, 0x0a, 0x0d, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x12,
	0x22, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x7a,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x5a, 0x12, 0x22, 0x0a, 0x0d, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x73, 0x5f, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6b, 0x69, 0x63, 0x6b,
	0x41, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x58, 0x12, 0x22, 0x0a, 0x0d, 0x6b, 0x69, 0x63, 0x6b, 0x5f,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x5f, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6b, 0x69, 0x63, 0x6b, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x59, 0x12, 0x22, 0x0a, 0x0d, 0x6b,
	0x69, 0x63, 0x6b, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x5f, 0x7a, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6b, 0x69, 0x63, 0x6b, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x5a, 0x12,
	0x20, 0x0a, 0x0c, 0x67, 0x75, 0x6e, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x5f, 0x78, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x75, 0x6e, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x73,
	0x58, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x75, 0x6e, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x5f,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x75, 0x6e, 0x41, 0x6e, 0x67, 0x6c,
	0x65, 0x73, 0x59, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x75, 0x6e, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x73, 0x5f, 0x7a, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x75, 0x6e, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x73, 0x5a, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x75, 0x6e, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x5f, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x75, 0x6e,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x75, 0x6e, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67,
	0x75, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x75, 0x6e,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x7a, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x67, 0x75, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5a, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x75, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x67, 0x75, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x75, 0x6e, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x75, 0x6e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x77,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x57, 0x12, 0x17,
	0x0a, 0x07, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x65, 0x6e, 0x64,
	0x5f, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x59,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x7a, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5a, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6f, 0x76,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x6f, 0x76, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72,
	0x64, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22,
	0xf8, 0x06, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x72, 0x65,
	0x61, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x62,
	0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x42,
	0x69, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x66, 0x66, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x75, 0x66, 0x66, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x66, 0x66, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x52, 0x06, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x45, 0x0a, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72,
	0x61, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x08, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x73, 0x31, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x52, 0x08, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x73, 0x31, 0x12, 0x2e, 0x0a,
	0x08, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x73, 0x32, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x52, 0x08, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x73, 0x32, 0x12, 0x27, 0x0a,
	0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x07, 0x6c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x1a, 0x50, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x35, 0x0a, 0x05, 0x50, 0x72,
	0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x22, 0xa3, 0x02, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x22, 0xce, 0x03, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x5f, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x58,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x5f, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31,
	0x59, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x5f, 0x7a,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x31, 0x5a, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x5f,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0x58, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32,
	0x5f, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x32, 0x59, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x32, 0x5f, 0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0x5a, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x5a, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x0b, 0x4d, 0x75, 0x7a, 0x7a,
	0x6c, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x06, 0x4c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x25, 0x0a, 0x0b, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x62,
	0x71, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dm2_demo_proto_rawDescOnce sync.Once
	file_dm2_demo_proto_rawDescData = file_dm2_demo_proto_rawDesc
)

func file_dm2_demo_proto_rawDescGZIP() []byte {
	file_dm2_demo_proto_rawDescOnce.Do(func() {
		file_dm2_demo_proto_rawDescData = protoimpl.X.CompressGZIP(file_dm2_demo_proto_rawDescData)
	})
	return file_dm2_demo_proto_rawDescData
}

var file_dm2_demo_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_dm2_demo_proto_goTypes = []interface{}{
	(*DM2Demo)(nil),         // 0: proto.DM2Demo
	(*ServerInfo)(nil),      // 1: proto.ServerInfo
	(*CString)(nil),         // 2: proto.CString
	(*StuffText)(nil),       // 3: proto.StuffText
	(*PackedEntity)(nil),    // 4: proto.PackedEntity
	(*PlayerMove)(nil),      // 5: proto.PlayerMove
	(*PlayerStat)(nil),      // 6: proto.PlayerStat
	(*PackedPlayer)(nil),    // 7: proto.PackedPlayer
	(*Frame)(nil),           // 8: proto.Frame
	(*Print)(nil),           // 9: proto.Print
	(*PackedSound)(nil),     // 10: proto.PackedSound
	(*TemporaryEntity)(nil), // 11: proto.TemporaryEntity
	(*MuzzleFlash)(nil),     // 12: proto.MuzzleFlash
	(*Layout)(nil),          // 13: proto.Layout
	(*CenterPrint)(nil),     // 14: proto.CenterPrint
	nil,                     // 15: proto.DM2Demo.BaselinesEntry
	nil,                     // 16: proto.DM2Demo.ConfigstringsEntry
	nil,                     // 17: proto.DM2Demo.FramesEntry
	nil,                     // 18: proto.Frame.EntitiesEntry
	nil,                     // 19: proto.Frame.ConfigstringsEntry
}
var file_dm2_demo_proto_depIdxs = []int32{
	1,  // 0: proto.DM2Demo.serverinfo:type_name -> proto.ServerInfo
	15, // 1: proto.DM2Demo.baselines:type_name -> proto.DM2Demo.BaselinesEntry
	16, // 2: proto.DM2Demo.configstrings:type_name -> proto.DM2Demo.ConfigstringsEntry
	17, // 3: proto.DM2Demo.frames:type_name -> proto.DM2Demo.FramesEntry
	5,  // 4: proto.PackedPlayer.movestate:type_name -> proto.PlayerMove
	6,  // 5: proto.PackedPlayer.stats:type_name -> proto.PlayerStat
	7,  // 6: proto.Frame.player_state:type_name -> proto.PackedPlayer
	18, // 7: proto.Frame.entities:type_name -> proto.Frame.EntitiesEntry
	19, // 8: proto.Frame.configstrings:type_name -> proto.Frame.ConfigstringsEntry
	14, // 9: proto.Frame.centerprints:type_name -> proto.CenterPrint
	3,  // 10: proto.Frame.stufftexts:type_name -> proto.StuffText
	9,  // 11: proto.Frame.prints:type_name -> proto.Print
	10, // 12: proto.Frame.sounds:type_name -> proto.PackedSound
	11, // 13: proto.Frame.temporary_entities:type_name -> proto.TemporaryEntity
	12, // 14: proto.Frame.flashes1:type_name -> proto.MuzzleFlash
	12, // 15: proto.Frame.flashes2:type_name -> proto.MuzzleFlash
	13, // 16: proto.Frame.layouts:type_name -> proto.Layout
	4,  // 17: proto.DM2Demo.BaselinesEntry.value:type_name -> proto.PackedEntity
	2,  // 18: proto.DM2Demo.ConfigstringsEntry.value:type_name -> proto.CString
	8,  // 19: proto.DM2Demo.FramesEntry.value:type_name -> proto.Frame
	4,  // 20: proto.Frame.EntitiesEntry.value:type_name -> proto.PackedEntity
	2,  // 21: proto.Frame.ConfigstringsEntry.value:type_name -> proto.CString
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_dm2_demo_proto_init() }
func file_dm2_demo_proto_init() {
	if File_dm2_demo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dm2_demo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DM2Demo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StuffText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackedEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackedPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Print); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackedSound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemporaryEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuzzleFlash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Layout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dm2_demo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CenterPrint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dm2_demo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dm2_demo_proto_goTypes,
		DependencyIndexes: file_dm2_demo_proto_depIdxs,
		MessageInfos:      file_dm2_demo_proto_msgTypes,
	}.Build()
	File_dm2_demo_proto = out.File
	file_dm2_demo_proto_rawDesc = nil
	file_dm2_demo_proto_goTypes = nil
	file_dm2_demo_proto_depIdxs = nil
}
