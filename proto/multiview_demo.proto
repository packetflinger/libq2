// compile with:
// protoc --go_out=. --go_opt=paths=source_relative multiview_demo.proto
syntax = "proto3";
option go_package = "github.com/packetflinger/libq2/proto";
package proto;

import "server_message.proto";

// All the messages that make up a complete multi-view demo. A .mvd2 file can
// contain more than one MvdDemo. Each map is technically considered a separate
// demo even though they're all contained in the same file.
message MvdDemo {
    int32 version = 1;                      // minor version, 2010 is current
    int32 identity = 2;                     // unique number
    string game_dir = 3;                    // "opentdm", "baseq2", etc
    int32 dummy = 4;                        // player number of observer dummy
    int32 max_players = 5;                  // server cvar
    string map = 6;                         // the current map
    int32 flags = 7;
    int32 entity_state_flags = 8;
    int32 player_state_flags = 9;
    MvdConfigStringRemap remap = 10;         // cs numbers, flags depenedant
    MvdEntityStateExtension extension = 11;
    map<int32,ConfigString> configstrings = 12;
    map<int32,MvdPlayer> players = 13;
    map<int32,PackedEntity> entities = 14;
    repeated MvdPacket packets = 15;
}

message Multicast {
    int32 type = 1;
    bool reliable = 2;
    int32 leafnum = 3;
    string data = 4;
}

// Different max limits and cs offsets depending on protocol version.
message MvdConfigStringRemap {
    bool extended = 1;
    int32 max_edicts = 2;
    int32 max_models = 3;
    int32 max_sounds = 4;
    int32 max_images = 5;
    int32 air_accel = 6;
    int32 max_clients = 7;
    int32 map_checksum = 8;
    int32 models = 9;
    int32 sounds = 10;
    int32 images = 11;
    int32 lights = 12;
    int32 items = 13;
    int32 player_skins = 14;
    int32 general = 15;
    int32 end = 16;
}

message MvdPlayer {
    bool in_use = 1;
    string name = 2;
    PackedPlayer player_state = 3;
}

message MvdEntityStateExtension {
    int32 more_fx = 1;
    int32 alpha = 2;
    int32 scale = 3;
    int32 loop_volume = 4;
    int32 loop_attenuation = 5;
}

message MvdFrame {
    //int32 portal_bits = 1;  // remove later this is len(portal_data)
    bytes portal_data = 2;
    map<int32, PackedPlayer> players = 3;  // players introduced this frame
    map<int32, PackedEntity> entities = 4; // ents seen this frame
    repeated PackedSound sounds = 5;
}

message MvdMulticast {
    int32 type = 1;    // byte
    int32 leaf = 2;    // word
    bytes data = 3;
}

message MvdUnicast {
    int32 client_number = 1; // player index
    MvdPlayer player = 2;
    repeated Layout layouts = 3;
    repeated ConfigString configstrings = 4;
    repeated Print prints = 5;
    repeated StuffText stuffs = 6;
}

message MvdPacket {
    repeated PackedSound sounds = 1;
    repeated Print prints = 2;
    repeated MvdUnicast unicasts= 3;
    repeated MvdMulticast multicasts= 4;
    repeated MvdFrame frames = 5;
    repeated ConfigString configstrings = 6;  // maybe a map?
}